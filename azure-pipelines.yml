# https://aka.ms/yaml

trigger:
- master
pr:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: coreVariables

steps:
- pwsh: ./runTests.ps1
  displayName: 'Run helper module tests'
  workingDirectory: '$(Build.SourcesDirectory)/functionApp/Modules/MathshammerHelper/Tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: '**/TEST-*.xml'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in **/base.tf and **/variables.tf'
  inputs:
    targetFiles: '**/base.tf,**/variables.tf'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Install terraform'
  inputs:
    terraformVersion: 0.12.16

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform init'
  inputs:
    command: init
    workingDirectory: '$(Build.SourcesDirectory)/infrastructure/terraform'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform validate'
  inputs:
    command: validate
    workingDirectory: '$(Build.SourcesDirectory)/infrastructure/terraform'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform apply'
  inputs:
    command: apply
    workingDirectory: '$(Build.SourcesDirectory)/infrastructure/terraform'
    environmentServiceName: azure

- task: ArchiveFiles@2
  displayName: 'Archive $(Build.SourcesDirectory)/functionApp'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/functionApp'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

- task: AzureFunctionApp@1
  displayName: 'Azure Function App Deploy: mathshammer'
  inputs:
    azureSubscription: azure
    appType: functionApp
    appName: mathshammer
    package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
